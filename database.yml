---
- hosts: localhost
  connection: local
  name: Install MySQL database
  become: yes
  gather_facts: false

  tasks:
      - name: Install MySQL
        apt: pkg={{ item }} state=present update_cache=yes
        with_items:
            - mysql-server-5.7
            - mysql-client-5.7
            - mysql-common
            - python-mysqldb

      - name: Start the MySQL service
        service: 
            name: mysql 
            state: started
            enabled: true

      - name: Removes all anonymous user accounts
        mysql_user:
            name: ''
            host_all: yes
            state: absent

      - name: Removes test database
        mysql_db:
            name: test
            state: absent

      - name: Create new database
        mysql_db:
            name: "{{ lookup('env','DB_NAME') }}"
            state: present

      - name: Create new database user
        mysql_user:
            name: "{{ lookup('env','DB_USER') }}"
            host: "{{ lookup('env','DB_HOST') }}"
            password: "{{ lookup('env','DB_PASS') }}"
            priv: "{{ lookup('env','DB_NAME') }}.*:ALL,GRANT"
            state: present

      - name: Get DB IP address
        shell: "aws ec2 describe-instances --filters 'Name=tag:Name,Values=Database' --query 'Reservations[*].Instances[*].PrivateIpAddress' --output=text"
        environment:
          AWS_ACCESS_KEY_ID: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
          AWS_DEFAULT_REGION: "{{ lookup('env','AWS_DEFAULT_REGION') }}"
          AWS_SECRET_ACCESS_KEY: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
        register: database
          
      - name: Copy my.cnf file
        template:
            src: my.cnf
            dest: /etc/mysql/my.cnf
        register: mycnf

      - name: Restart MySQL server
        become: true
        service: name=mysql state=restarted
        when: mycnf.changed

      - name: Check that user can connect to database
        mysql_db:
            login_user: "{{ lookup('env','DB_USER') }}"
            login_password: "{{ lookup('env','DB_PASS') }}"
            login_host: "{{ database.stdout }}"
            login_port: "{{ lookup('env','DB_PORT') | int }}"
            name: "{{ lookup('env','DB_NAME') }}"
            state: present
